#! /bin/bash

# 00_how_to_docker - 19
# Q: Démarrer un container qui senommera 'Abathur'. 'Abathur' sera un container
#    Python en version 2-slim, qui aura son dossier '/root' bindé à un dossier
#    du HOME de votre host, ainsi que le port 3000 bindé au port 3000 de votre
#    machine virtuelle.
#    Vous personnaliserez ce container de telle sorte que vous puissiez utiliser
#    le micro-framework 'Flask' dans sa dernière version. Vous devrez faire en
#    sorte qu’une page html renvoyant un "Hello World" dans des balises <h1>,
#    soit servie par 'Flask'.
#    Vous testerez la bonne mise en place de votre container, en accédant via 
#    curl ou navigateur web,à l’adresse IP de votre machine virtuelle sur le
#    port 3000.
#    Vous listerez aussi toutes les commandes nécessaires dans votre rendu.

OS=`uname`
VM="Char"
IP=$(docker-machine ip $VM)
NAME_CONT="Abathur"
PORT_VM=3000
PORT_CONT=3000
URL="http://"$IP":"$PORT_VM
if [ "$OS" = 'Linux' ]; then OPEN="xdg-open" ; else OPEN="open"; fi
LOCAL_FOLDER=/tmp
HOST_FOLDER=$HOME/$NAME_CONT
CONT_FOLDER=/root
HTML_PAGE="hello.py"

check_args() {
	if [ "${1}" = "-u" ] || [ "${1}" = "--undo" ]; then
		docker stop $NAME_CONT && docker container rm $NAME_CONT
		exit 1
	elif [ "${1}" = "-c" ] || [ "${1}" = "--check" ]; then
	    docker ps -a   
		echo && read -p "open [oO] or curl [cC] $URL ? " -n 1 -r
		if [[ $REPLY =~ ^[oO]$ ]]; then
			$OPEN $URL
		elif [[ $REPLY =~ ^[cC]$ ]]; then
			curl $URL
		fi
		exit 1
	fi
}

create_html_page_helloworld() {
	cat > $LOCAL_FOLDER/$HTML_PAGE << EOM
#!/usr/bin/env python

from flask import Flask
app = Flask(__name__)

@app.route('/')
def index():
	return "<h1>Hello World</h1>"

if __name__ == "__main__":
	app.run(host="0.0.0.0", port="$PORT_CONT")
EOM
	chmod 777 $LOCAL_FOLDER/$HTML_PAGE
}

copy_from_local_to_host() {
	if [ "$OS" = 'Linux' ]; then
		docker-machine ssh $VM mkdir -p $HOST_FOLDER
		docker-machine scp $LOCAL_FOLDER/$HTML_PAGE $VM:$HOST_FOLDER
	elif [ "$OS" = 'Darwin' ]; then
		mkdir -p $HOME_FOLDER
		cp $LOCAL_FOLDER/$HTML_PAGE $HOST_FOLDER/$HTML_PAGE
	fi
}

create_python_container() {
	docker run -dt \
			--name $NAME_CONT \
			--mount type=bind,source=$HOST_FOLDER,target=$CONT_FOLDER \
			-p $PORT_VM:$PORT_CONT \
			python:2-slim
}

install_flask_in_container() {
	docker exec $NAME_CONT /bin/bash -c "pip install flask"
}

run_flask_in_container() {
	docker exec \
		$NAME_CONT \
		python $CONT_FOLDER/$HTML_PAGE
}

set -o xtrace -o errexit
check_args "$@"
create_html_page_helloworld
copy_from_local_to_host
create_python_container
install_flask_in_container
run_flask_in_container

# Sources:
# https://docs.docker.com/engine/reference/commandline/run/
# https://hub.docker.com/_/python/
# https://pip.pypa.io/en/stable/reference/pip_install/
# https://openclassrooms.com/fr/courses/1654786-creez-vos-applications-web-avec-flask/1654912-presentation-de-flask
# http://flask.pocoo.org/docs/1.0/quickstart/
# http://flask.pocoo.org/docs/1.0/cli/
# https://docs.docker.com/v17.09/machine/reference/scp/